{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Home.vue?2b94","webpack:///./src/components/CellSection.vue?e53a","webpack:///./src/components/Cell.vue?41fd","webpack:///./src/App.vue?9bd4","webpack:///./src/App.vue","webpack:///./src/App.vue?f21b","webpack:///./src/views/Home.vue?d7c7","webpack:///./src/components/Cell.vue?fcca","webpack:///./src/components/CellSection.vue?a6a0","webpack:///./src/components/CellSection.vue?a1b1","webpack:///./src/components/CellSection.vue?d590","webpack:///./src/components/Cell.vue?52f3","webpack:///./src/components/Cell.vue?c065","webpack:///./src/views/Home.vue?53c7","webpack:///./src/views/Home.vue?0767","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/quasar-user-options.js","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","script","__exports__","render","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","cellspacing","_hoisted_5","_hoisted_6","for","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","style","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_ctx","_cache","$props","$setup","$data","$options","_component_Cell","drawPlan","rows","columns","row","column","cellId","selectedCellSections","onToggle","toggle","type","id","$event","drawSelection","checked","singleSlabs","onClick","getResults","computeResult","B25x25","B25x50","B50x50","L25x25","L25x50","L25x75","L25x100","L50x50","L50x75","L50x100","points","filter","x","giuntoAlto","giuntoBasso","tiranteOrizzontale","tiranteObliquo","tiranteObliquoH50","tiranteObliquoH75","tiranteObliquoH100","piantana","angolare","squadrettaAncoraggio","elementoCrocera","spinottoCorto","piastraLineare","piastraAngolare","piastraL","allinZ","allinL","_component_CellSection","position","topLeft","section","topRight","bottomLeft","bottomRight","cellIgnored","computedClass","rowspan","cellRowSpan","colspan","cellColumnSpan","cellHeight","props","computed","this","cellIsSquare","cellIsHBlock","cellIsVBlock","cellSectionId","height","ignored","isSquare","isHBlock","hBlock","isVBlock","vBlock","methods","Number","split","toggleParams","$emit","components","CellSection","params","Cell","blockSize","blockHeight","initBlock","checkIfSquare","cellSectionCoordinates","parseCellSectionId","section1Id","getCellSectionId","section2Id","section3Id","section4Id","referenceHeight","ignoredPoints","cellSectionParsed","checkIfHBlock","checkIfVBlock","getSingleBlockNearCells","topCellSectionId","rightCellSectionId","bottomCellSectionId","leftCellSectionId","getVBlockNearCells","rightTopCellSectionId","rightBottomCellSectionId","leftTopCellSectionId","leftBottomCellSectionId","getSquareBlockNearCells","topLeftCellSectionId","topRightCellSectionId","bottomLeftCellSectionId","bottomRightCellSectionId","getHBlockNearCells","getCellSectionNearCells","getLastreSingle","values","singles","blocks25x50singles","blocks25x75singles","blocks25x100singles","forEach","currentCellCoordinates","nearCells","getLastreVBlock","vBlocks","blocksH50vBlocks","blocksH75vBlocks","blocksH100vBlocks","getLastreHBlock","hBlocks","blocksH50hBlocks","blocksH75hBlocks","blocksH100hBlocks","getLastreSquare","squareBlocks","blocksH50squares","blocksH75squares","blocksH100squares","getLastre","getBasamenti","getOverlappingPoints","res","getLinearPoints","nearCellCoordinates","find","includes","getInternalPoints","getExternalPoints","getCentralPoints","getPoints","getAccessori","cell","nearCellSections","topCell","leftCell","rightCell","bottomCell","topLeftCell","topRightCell","bottomRightCell","bottomLeftCell","heights","h","idParts","removeSelectedCellSection","toggleCellSection","keys","sort","routes","path","component","Home","router","history","state","mutations","actions","config","plugins","lang","langIT","App","use","store","mount"],"mappings":"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","file":"js/app.aad7cecf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/rcl-planner/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-1!../../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./Home.vue?vue&type=style&index=0&id=621d7f80&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-1!../../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./CellSection.vue?vue&type=style&index=0&id=f762225c&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-1!../../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./Cell.vue?vue&type=style&index=0&id=07454a7a&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-1!../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./App.vue?vue&type=style&index=0&id=53989388&lang=css\"","<template>\n  <router-view />\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=53989388\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=53989388&lang=css\"\n\nimport exportComponent from \"/home/runner/work/rcl-planner/rcl-planner/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelRadio as _vModelRadio, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-621d7f80\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"q-pa-md\" }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = { class: \"col\" }\nconst _hoisted_4 = {\n  class: \"plan\",\n  cellspacing: \"0\"\n}\nconst _hoisted_5 = { class: \"col\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x25_50\" }, \"25x25 H50\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x25_50\" }, \"25x25 H75\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x25_100\" }, \"25x25 H100\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x50_50\" }, \"25x50 H50\", -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x50_50\" }, \"25x50 H75\", -1))\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"25x50_100\" }, \"25x50 H100\", -1))\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x25_50\" }, \"50x25 H50\", -1))\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x25_50\" }, \"50x25 H75\", -1))\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x25_100\" }, \"50x25 H100\", -1))\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x50_50\" }, \"50x50 H50\", -1))\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x50_50\" }, \"50x50 H75\", -1))\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"50x50_100\" }, \"50x50 H100\", -1))\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_22 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", { for: \"singleSlabs\" }, \"Lastre altezza unica\", -1))\nconst _hoisted_24 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_26 = { class: \"row\" }\nconst _hoisted_27 = { class: \"col\" }\nconst _hoisted_28 = { style: {\"font-size\":\"11px\"} }\nconst _hoisted_29 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Bas 25x25\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Bas 25x50\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Bas 50x50\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 25x25\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 25x50\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 25x75\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 25x100\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 50x50\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 50x75\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lastre 50x100\")\n  ])\n], -1))\nconst _hoisted_30 = { class: \"row\" }\nconst _hoisted_31 = { class: \"col\" }\nconst _hoisted_32 = { style: {\"font-size\":\"11px\"} }\nconst _hoisted_33 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Lineari\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Interni\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Esterni\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Centrali\")\n  ])\n], -1))\nconst _hoisted_34 = { class: \"row\" }\nconst _hoisted_35 = { class: \"col\" }\nconst _hoisted_36 = { style: {\"font-size\":\"11px\"} }\nconst _hoisted_37 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Giunto Alto\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Giunto Basso\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Tirante Orizz.\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Tirante Obliquo\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Tirante Obliquo H50\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Tirante Obliquo H75\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Tirante Obliquo H100\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Piantana\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Angolare\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Squadr. Anc.\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Elemento Crocera\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Spinotto Corto\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Piastra Lineare\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Piastra Angolare\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Piastra L\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Allin Z\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"padding\":\"0 15px\"} }, \"Allin L\")\n  ])\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Cell = _resolveComponent(\"Cell\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.drawPlan.rows, (r) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: r }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.drawPlan.columns, (c) => {\n                  return (_openBlock(), _createElementBlock(\"td\", {\n                    class: \"cell-wrapper\",\n                    key: c\n                  }, [\n                    _createVNode(_component_Cell, {\n                      row: r,\n                      column: c,\n                      cellId: `${r}_${c}`,\n                      selectedCellSections: _ctx.selectedCellSections,\n                      onToggle: _ctx.toggle\n                    }, null, 8, [\"row\", \"column\", \"cellId\", \"selectedCellSections\", \"onToggle\"])\n                  ]))\n                }), 128))\n              ]))\n            }), 128))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x25_50\",\n            name: \"draw-selection\",\n            value: \"25x25_50\",\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.drawSelection) = $event)),\n            checked: \"\"\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_6,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x25_75\",\n            name: \"draw-selection\",\n            value: \"25x25_75\",\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_7,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x25_100\",\n            name: \"draw-selection\",\n            value: \"25x25_100\",\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_8,\n          _hoisted_9,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x50_50\",\n            name: \"draw-selection\",\n            value: \"25x50_50\",\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_10,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x50_75\",\n            name: \"draw-selection\",\n            value: \"25x50_75\",\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_11,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"25x50_100\",\n            name: \"draw-selection\",\n            value: \"25x50_100\",\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_12,\n          _hoisted_13,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x25_50\",\n            name: \"draw-selection\",\n            value: \"50x25_50\",\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_14,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x25_75\",\n            name: \"draw-selection\",\n            value: \"50x25_75\",\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_15,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x25_100\",\n            name: \"draw-selection\",\n            value: \"50x25_100\",\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_16,\n          _hoisted_17,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x50_50\",\n            name: \"draw-selection\",\n            value: \"50x50_50\",\n            \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_18,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x50_75\",\n            name: \"draw-selection\",\n            value: \"50x50_75\",\n            \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_19,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"radio\",\n            id: \"50x50_100\",\n            name: \"draw-selection\",\n            value: \"50x50_100\",\n            \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.drawSelection) = $event))\n          }, null, 512), [\n            [_vModelRadio, _ctx.drawSelection]\n          ]),\n          _hoisted_20,\n          _hoisted_21,\n          _hoisted_22,\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"checkbox\",\n            name: \"singleSlabs\",\n            \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((_ctx.singleSlabs) = $event))\n          }, null, 512), [\n            [_vModelCheckbox, _ctx.singleSlabs]\n          ]),\n          _hoisted_23,\n          _hoisted_24,\n          _hoisted_25,\n          _createElementVNode(\"button\", {\n            onClick: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.getResults && _ctx.getResults(...args)))\n          }, \"CALCOLA\")\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_26, [\n        _createElementVNode(\"div\", _hoisted_27, [\n          _createElementVNode(\"table\", _hoisted_28, [\n            _hoisted_29,\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.B25x25), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.B25x50), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.B50x50), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L25x25), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L25x50), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L25x75), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L25x100), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L50x50), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L50x75), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.L50x100), 1)\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_30, [\n        _createElementVNode(\"div\", _hoisted_31, [\n          _createElementVNode(\"table\", _hoisted_32, [\n            _hoisted_33,\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.points.filter((x) => x.type == \"linear\").length), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.points.filter((x) => x.type == \"internal\").length), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.points.filter((x) => x.type == \"external\").length), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.points.filter((x) => x.type == \"central\").length), 1)\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_34, [\n        _createElementVNode(\"div\", _hoisted_35, [\n          _createElementVNode(\"table\", _hoisted_36, [\n            _hoisted_37,\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", null, [\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.giuntoAlto), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.giuntoBasso), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.tiranteOrizzontale), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.tiranteObliquo), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.tiranteObliquoH50), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.tiranteObliquoH75), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.tiranteObliquoH100), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.piantana), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.angolare), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.squadrettaAncoraggio), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.elementoCrocera), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.spinottoCorto), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.piastraLineare), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.piastraAngolare), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.piastraL), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.allinZ), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_ctx.computeResult.allinL), 1)\n              ])\n            ])\n          ])\n        ])\n      ])\n    ])\n  ]))\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07454a7a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"cell-container\",\n  cellspacing: \"0\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_CellSection = _resolveComponent(\"CellSection\")!\n\n  return (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [\n    _createElementVNode(\"tr\", null, [\n      _createVNode(_component_CellSection, {\n        position: _ctx.topLeft,\n        row: _ctx.row,\n        column: _ctx.column,\n        section: 1,\n        cellId: _ctx.cellId,\n        selectedCellSections: _ctx.selectedCellSections,\n        onToggle: _ctx.toggle\n      }, null, 8, [\"position\", \"row\", \"column\", \"cellId\", \"selectedCellSections\", \"onToggle\"]),\n      _createVNode(_component_CellSection, {\n        position: _ctx.topRight,\n        row: _ctx.row,\n        column: _ctx.column,\n        section: 2,\n        cellId: _ctx.cellId,\n        selectedCellSections: _ctx.selectedCellSections,\n        onToggle: _ctx.toggle\n      }, null, 8, [\"position\", \"row\", \"column\", \"cellId\", \"selectedCellSections\", \"onToggle\"])\n    ]),\n    _createElementVNode(\"tr\", null, [\n      _createVNode(_component_CellSection, {\n        position: _ctx.bottomLeft,\n        row: _ctx.row,\n        column: _ctx.column,\n        section: 3,\n        cellId: _ctx.cellId,\n        selectedCellSections: _ctx.selectedCellSections,\n        onToggle: _ctx.toggle\n      }, null, 8, [\"position\", \"row\", \"column\", \"cellId\", \"selectedCellSections\", \"onToggle\"]),\n      _createVNode(_component_CellSection, {\n        position: _ctx.bottomRight,\n        row: _ctx.row,\n        column: _ctx.column,\n        section: 4,\n        cellId: _ctx.cellId,\n        selectedCellSections: _ctx.selectedCellSections,\n        onToggle: _ctx.toggle\n      }, null, 8, [\"position\", \"row\", \"column\", \"cellId\", \"selectedCellSections\", \"onToggle\"])\n    ])\n  ]))\n}","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f762225c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"rowspan\", \"colspan\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (!_ctx.cellIgnored)\n    ? (_openBlock(), _createElementBlock(\"td\", {\n        key: 0,\n        class: _normalizeClass(_ctx.computedClass),\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.toggle && _ctx.toggle(...args))),\n        rowspan: _ctx.cellRowSpan,\n        colspan: _ctx.cellColumnSpan\n      }, _toDisplayString(_ctx.cellIgnored ? \"\" : _ctx.cellHeight > 0 ? _ctx.cellHeight : \"\"), 11, _hoisted_1))\n    : _createCommentVNode(\"\", true)\n}","\nimport { defineComponent } from \"vue\";\nimport { ToggleParams } from \"../appTypes\";\n\nexport default defineComponent({\n  name: \"CellSection\",\n  props: [\n    \"position\",\n    \"row\",\n    \"column\",\n    \"section\",\n    \"cellId\",\n    \"selectedCellSections\"\n  ],\n  computed: {\n    computedClass(): string {\n      return `cell-section ${this.cellHeight > 0 ? \"cell-section-selected\" : \"\"} cell-section-${this.position} ${this.cellIgnored ? \"cell-section-ignored\" : \"\"} ${this.cellIsSquare ? \"cell-section-square\" : \"\"} ${this.cellIsHBlock ? \"cell-section-hblock\" : \"\"} ${this.cellIsVBlock ? \"cell-section-vblock\" : \"\"} `;\n    },\n    cellSectionId(): string {\n      return `${this.cellId}_${this.section}`\n    },\n    cellHeight(): number {\n      const height = this.selectedCellSections[this.cellSectionId]?.height;\n      if(height) {\n        return height;\n      }\n      return 0;\n    },\n    cellIgnored(): number {\n      const ignored = this.selectedCellSections[this.cellSectionId]?.ignored;\n      return ignored;\n    },\n    cellIsSquare(): boolean {\n      const isSquare = this.selectedCellSections[this.cellSectionId]?.isSquare;\n      return isSquare || false;\n    },\n    cellIsHBlock(): boolean {\n      const isHBlock = this.selectedCellSections[this.cellSectionId]?.hBlock;\n      return isHBlock || false;\n    },\n    cellIsVBlock(): boolean {\n      const isVBlock = this.selectedCellSections[this.cellSectionId]?.vBlock;\n      return isVBlock || false;\n    },\n    cellRowSpan(): number {\n      if(this.cellIsSquare || this.cellIsVBlock) {\n        return 2;\n      }\n      return 1;\n    },\n    cellColumnSpan(): number {\n      if(this.cellIsSquare || this.cellIsHBlock) {\n        return 2;\n      }\n      return 1;\n    }\n  },\n  methods: {\n    toggle() {\n      const row = Number(this.cellId.split(\"_\")[0]);\n      const column = Number(this.cellId.split(\"_\")[1]);\n      const section = Number(this.cellSectionId.split(\"_\")[2]);\n      const toggleParams: ToggleParams = {\n        cellId: this.cellId,\n        cellSectionId: this.cellSectionId,\n        row: row, \n        column: column, \n        section: section\n      }\n      this.$emit(\"toggle\", toggleParams);\n    },\n  }\n});\n","import { render } from \"./CellSection.vue?vue&type=template&id=f762225c&scoped=true&ts=true\"\nimport script from \"./CellSection.vue?vue&type=script&lang=ts\"\nexport * from \"./CellSection.vue?vue&type=script&lang=ts\"\n\nimport \"./CellSection.vue?vue&type=style&index=0&id=f762225c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/rcl-planner/rcl-planner/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f762225c\"]])\n\nexport default __exports__","\nimport CellSection from \"../components/CellSection.vue\";\nimport { defineComponent } from \"vue\";\nimport { CellSectionPosition, ToggleParams } from \"../appTypes\";\n\nexport default defineComponent({\n  name: \"Cell\",\n  components: {\n    CellSection\n  },\n  props: [\n    \"row\",\n    \"column\",\n    \"cellId\",\n    \"selectedCellSections\"\n  ],\n  data () {\n    return {\n      topLeft: \"top-left\" as CellSectionPosition,\n      topRight: \"top-right\" as CellSectionPosition,\n      bottomLeft: \"bottom-left\" as CellSectionPosition,\n      bottomRight: \"bottom-right\" as CellSectionPosition,\n    }\n  },\n  methods: {\n    toggle(params: ToggleParams) {\n      this.$emit(\"toggle\", params);\n    }\n  }\n});\n","import { render } from \"./Cell.vue?vue&type=template&id=07454a7a&scoped=true&ts=true\"\nimport script from \"./Cell.vue?vue&type=script&lang=ts\"\nexport * from \"./Cell.vue?vue&type=script&lang=ts\"\n\nimport \"./Cell.vue?vue&type=style&index=0&id=07454a7a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/rcl-planner/rcl-planner/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07454a7a\"]])\n\nexport default __exports__","\nimport { defineComponent } from \"vue\";\nimport Cell from \"../components/Cell.vue\";\nimport { DrawPlan, SelectedCellSections, ToggleParams, CellSectionCoordinates, ComputeResult, Point } from \"../appTypes\";\n\nexport default defineComponent({\n  name: \"Home\",\n  components: {\n    Cell\n  },\n  data () {\n    return {\n      drawPlan: { \n        rows: 10,\n        columns: 10\n      } as DrawPlan,\n      drawSelection: \"25x25_50\" as string,\n      selectedCellSections: {} as SelectedCellSections,\n      singleSlabs: false,\n      computeResult: {\n        B25x25: 0,\n        B25x50: 0,\n        B50x50: 0,\n        L25x25: 0,\n        L25x50: 0,\n        L25x75: 0,\n        L25x100: 0,\n        L50x50: 0,\n        L50x75: 0,\n        L50x100: 0,\n        allinL: 0,\n        allinZ: 0,\n        angolare: 0,\n        elementoCrocera: 0,\n        giuntoAlto: 0,\n        giuntoBasso: 0,\n        piantana: 0,\n        piastraAngolare: 0,\n        piastraL: 0,\n        piastraLineare: 0,\n        spinottoCorto: 0,\n        squadrettaAncoraggio: 0,\n        tiranteObliquo: 0,\n        tiranteObliquoH100: 0,\n        tiranteObliquoH50: 0,\n        tiranteObliquoH75: 0,\n        tiranteOrizzontale: 0,\n        points: []\n      } as ComputeResult\n    }\n  },\n  computed: {\n    blockSize(): string {\n      return this.drawSelection.split(\"_\")[0];\n    },\n    blockHeight(): number {\n      return Number(this.drawSelection.split(\"_\")[1]);\n    }\n  },\n  methods: {\n    initBlock(key: string) {\n      if(this.selectedCellSections[key]) {\n        this.selectedCellSections[key].ignored = false;\n        this.selectedCellSections[key].hBlock = false;\n        this.selectedCellSections[key].vBlock = false;\n        this.selectedCellSections[key].isSquare = false;\n      }\n    },\n    \n    checkIfSquare(key: string): void {\n      const cellSectionCoordinates = this.parseCellSectionId(key);\n      const section1Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 1); \n      const section2Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 2); \n      const section3Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 3); \n      const section4Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 4); \n      if(this.selectedCellSections[section1Id] && this.selectedCellSections[section2Id] && this.selectedCellSections[section3Id] && this.selectedCellSections[section4Id]) {\n        const referenceHeight = this.selectedCellSections[section1Id].height;\n        if(this.selectedCellSections[section1Id].height == referenceHeight && this.selectedCellSections[section2Id].height == referenceHeight && this.selectedCellSections[section3Id].height == referenceHeight && this.selectedCellSections[section4Id].height == referenceHeight) {\n          this.initBlock(section1Id);\n          this.selectedCellSections[section1Id].isSquare = true;\n          this.selectedCellSections[section1Id].ignoredPoints = [\"top-right\", \"bottom-right\", \"bottom-left\"];\n          this.initBlock(section2Id);\n          this.selectedCellSections[section2Id].ignored = true;\n          this.selectedCellSections[section2Id].ignoredPoints = [\"top-left\", \"bottom-left\", \"bottom-right\"];\n          this.initBlock(section3Id);\n          this.selectedCellSections[section3Id].ignored = true;\n          this.selectedCellSections[section3Id].ignoredPoints = [\"top-right\", \"bottom-right\", \"top-left\"];\n          this.initBlock(section4Id);\n          this.selectedCellSections[section4Id].ignored = true;\n          this.selectedCellSections[section4Id].ignoredPoints = [\"top-right\", \"bottom-left\", \"top-left\"];\n          return;\n        }\n      }\n      if(this.selectedCellSections[section1Id]) {\n        if(!this.cellSectionParsed(section1Id)) {\n          this.initBlock(section1Id);\n        }\n      }\n      if(this.selectedCellSections[section2Id]) {\n        if(!this.cellSectionParsed(section2Id)) {\n          this.initBlock(section2Id);\n        }\n      }\n      if(this.selectedCellSections[section3Id]) {\n        if(!this.cellSectionParsed(section3Id)) {\n          this.initBlock(section3Id);\n        }\n      }\n      if(this.selectedCellSections[section4Id]) {\n        if(!this.cellSectionParsed(section4Id)) {\n          this.initBlock(section4Id);\n        }\n      }\n    },\n\n    checkIfHBlock(key: string): void {\n      const cellSectionCoordinates = this.parseCellSectionId(key);\n      const section1Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 1); \n      const section2Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 2); \n      const section3Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 3); \n      const section4Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 4); \n      if(cellSectionCoordinates.section == 1 && this.selectedCellSections[section2Id]) {\n        if(this.selectedCellSections[section1Id].height == this.selectedCellSections[section2Id].height && !this.cellSectionParsed(section2Id)) {\n          this.initBlock(section1Id);\n          this.selectedCellSections[section1Id].hBlock = true;\n          this.selectedCellSections[section1Id].ignoredPoints = [\"bottom-right\", \"top-right\"];\n          this.initBlock(section2Id);\n          this.selectedCellSections[section2Id].ignored = true;\n          this.selectedCellSections[section2Id].ignoredPoints = [\"bottom-left\", \"top-left\"];\n          return;\n        }\n      } else if(cellSectionCoordinates.section == 3 && this.selectedCellSections[section4Id]) {\n        if(this.selectedCellSections[section3Id].height == this.selectedCellSections[section4Id].height && !this.cellSectionParsed(section4Id)) {\n          this.initBlock(section3Id);\n          this.selectedCellSections[section3Id].hBlock = true;\n          this.selectedCellSections[section3Id].ignoredPoints = [\"bottom-right\", \"top-right\"];\n          this.initBlock(section4Id);\n          this.selectedCellSections[section4Id].ignored = true;\n          this.selectedCellSections[section4Id].ignoredPoints = [\"bottom-left\", \"top-left\"];\n          return;\n        }\n      } else {\n        if(cellSectionCoordinates.section == 1) {\n          this.initBlock(section1Id);\n          this.initBlock(section2Id);\n          if(!this.cellSectionParsed(section2Id)) {\n            this.initBlock(section2Id);\n          }\n        }\n        if(cellSectionCoordinates.section == 3) {\n          this.initBlock(section3Id);\n          if(!this.cellSectionParsed(section4Id)) {\n            this.initBlock(section4Id);\n          }\n        }\n      }\n    },\n\n    checkIfVBlock(key: string): void {\n      const cellSectionCoordinates = this.parseCellSectionId(key);\n      const section1Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 1); \n      const section2Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 2); \n      const section3Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 3); \n      const section4Id = this.getCellSectionId(cellSectionCoordinates.row, cellSectionCoordinates.column, 4); \n      if(cellSectionCoordinates.section == 1 && this.selectedCellSections[section3Id] && !this.cellSectionParsed(section3Id)) {\n        if(this.selectedCellSections[section1Id].height == this.selectedCellSections[section3Id].height) {\n          this.initBlock(section1Id);\n          this.selectedCellSections[section1Id].vBlock = true;\n          this.selectedCellSections[section1Id].ignoredPoints = [\"bottom-left\", \"bottom-right\"];\n          this.initBlock(section3Id);\n          this.selectedCellSections[section3Id].ignored = true;\n          this.selectedCellSections[section3Id].ignoredPoints = [\"top-left\", \"top-right\"];\n          return;\n        }\n      } else if(cellSectionCoordinates.section == 2 && this.selectedCellSections[section4Id] && !this.cellSectionParsed(section4Id)) {\n        if(this.selectedCellSections[section2Id].height == this.selectedCellSections[section4Id].height) {\n          this.initBlock(section2Id);\n          this.selectedCellSections[section2Id].vBlock = true;\n          this.selectedCellSections[section2Id].ignoredPoints = [\"bottom-left\", \"bottom-right\"];\n          this.initBlock(section4Id);\n          this.selectedCellSections[section4Id].ignored = true;\n          this.selectedCellSections[section4Id].ignoredPoints = [\"top-left\", \"top-right\"];\n          return;\n        }\n      } else {\n        if(cellSectionCoordinates.section == 1) {\n          if(!this.cellSectionParsed(section1Id)) {\n            this.initBlock(section1Id);\n          }\n          if(!this.cellSectionParsed(section3Id)) {\n            this.initBlock(section3Id);\n          }\n        }\n        if(cellSectionCoordinates.section == 2) {\n          if(!this.cellSectionParsed(section2Id)) {\n            this.initBlock(section2Id);\n          }\n          if(!this.cellSectionParsed(section4Id)) {\n            this.initBlock(section4Id);\n          }\n        }\n      }\n    },\n\n    getSingleBlockNearCells(row: number, column: number, section: number): {\n      topCellSectionId: string;\n      rightCellSectionId: string;\n      bottomCellSectionId: string;\n      leftCellSectionId: string;\n    } {\n      let topCellSectionId = \"\";\n      let rightCellSectionId = \"\";\n      let bottomCellSectionId = \"\";\n      let leftCellSectionId = \"\";\n      if(section == 1) {\n          topCellSectionId = this.getCellSectionId(row - 1, column, 3);\n          rightCellSectionId = this.getCellSectionId(row, column, 2);\n          bottomCellSectionId = this.getCellSectionId(row, column, 3);\n          leftCellSectionId = this.getCellSectionId(row, column - 1, 2);\n        } else if(section == 2) {\n          topCellSectionId = this.getCellSectionId(row - 1, column, 4);\n          rightCellSectionId = this.getCellSectionId(row, column + 1, 1);\n          bottomCellSectionId = this.getCellSectionId(row, column, 4);\n          leftCellSectionId = this.getCellSectionId(row, column , 1);\n        } else if(section == 3) {\n          topCellSectionId = this.getCellSectionId(row, column, 1);\n          rightCellSectionId = this.getCellSectionId(row, column, 4);\n          bottomCellSectionId = this.getCellSectionId(row + 1, column, 1);\n          leftCellSectionId = this.getCellSectionId(row, column - 1 , 4);\n        } else if(section == 4) {\n          topCellSectionId = this.getCellSectionId(row, column, 2);\n          rightCellSectionId = this.getCellSectionId(row, column + 1, 3);\n          bottomCellSectionId = this.getCellSectionId(row + 1, column, 2);\n          leftCellSectionId = this.getCellSectionId(row, column , 3);\n        }\n        return {\n          topCellSectionId,\n          rightCellSectionId,\n          bottomCellSectionId,\n          leftCellSectionId\n        };\n    },\n\n    getVBlockNearCells(row: number, column: number, section: number): {\n      topCellSectionId: string;\n      rightTopCellSectionId: string;\n      rightBottomCellSectionId: string;\n      bottomCellSectionId: string;\n      leftTopCellSectionId: string;\n      leftBottomCellSectionId: string;\n    } {\n      let topCellSectionId = \"\";\n      let rightTopCellSectionId = \"\";\n      let rightBottomCellSectionId = \"\";\n      let bottomCellSectionId = \"\";\n      let leftTopCellSectionId = \"\";\n      let leftBottomCellSectionId = \"\";\n\n      if(section == 1) {\n        topCellSectionId = this.getCellSectionId(row - 1, column, 3);\n        rightTopCellSectionId = this.getCellSectionId(row, column, 2);\n        rightBottomCellSectionId = this.getCellSectionId(row, column, 4);\n        bottomCellSectionId = this.getCellSectionId(row + 1, column, 1);\n        leftTopCellSectionId = this.getCellSectionId(row, column - 1, 2);\n        leftBottomCellSectionId = this.getCellSectionId(row, column - 1, 4);\n      } else if(section == 2) {\n        topCellSectionId = this.getCellSectionId(row - 1, column, 4);\n        rightTopCellSectionId = this.getCellSectionId(row, column + 1, 1);\n        rightBottomCellSectionId = this.getCellSectionId(row, column + 1, 3);\n        bottomCellSectionId = this.getCellSectionId(row + 1, column, 2);\n        leftTopCellSectionId = this.getCellSectionId(row, column, 1);\n        leftBottomCellSectionId = this.getCellSectionId(row, column, 3);\n      }\n\n      return {\n        topCellSectionId,\n        rightTopCellSectionId,\n        rightBottomCellSectionId,\n        bottomCellSectionId,\n        leftTopCellSectionId,\n        leftBottomCellSectionId\n      };\n    },\n\n    getSquareBlockNearCells(row: number, column: number): {\n      topLeftCellSectionId: string;\n      topRightCellSectionId: string;\n      rightTopCellSectionId: string;\n      rightBottomCellSectionId: string;\n      bottomLeftCellSectionId: string;\n      bottomRightCellSectionId: string;\n      leftTopCellSectionId: string;\n      leftBottomCellSectionId: string;\n    } {\n      let topLeftCellSectionId = \"\";\n      let topRightCellSectionId = \"\";\n      let rightTopCellSectionId = \"\";\n      let rightBottomCellSectionId = \"\";\n      let bottomLeftCellSectionId = \"\";\n      let bottomRightCellSectionId = \"\";\n      let leftTopCellSectionId = \"\";\n      let leftBottomCellSectionId = \"\";\n\n      topLeftCellSectionId = this.getCellSectionId(row - 1, column, 3);\n      topRightCellSectionId = this.getCellSectionId(row - 1, column, 4);\n      rightTopCellSectionId = this.getCellSectionId(row, column + 1, 1);\n      rightBottomCellSectionId = this.getCellSectionId(row, column + 1, 3);\n      bottomLeftCellSectionId = this.getCellSectionId(row + 1, column, 1);\n      bottomRightCellSectionId = this.getCellSectionId(row + 1, column, 2);\n      leftTopCellSectionId = this.getCellSectionId(row, column - 1, 2);\n      leftBottomCellSectionId = this.getCellSectionId(row, column - 1, 4);\n\n      return {\n        topLeftCellSectionId,\n        topRightCellSectionId,\n        rightTopCellSectionId,\n        rightBottomCellSectionId,\n        bottomLeftCellSectionId,\n        bottomRightCellSectionId,\n        leftTopCellSectionId,\n        leftBottomCellSectionId\n      };\n    },\n\n    getHBlockNearCells(row: number, column: number, section: number): {\n      topLeftCellSectionId: string;\n      topRightCellSectionId: string;\n      rightCellSectionId: string;\n      bottomLeftCellSectionId: string;\n      bottomRightCellSectionId: string;\n      leftCellSectionId: string;\n    } {\n      let topLeftCellSectionId = \"\";\n      let topRightCellSectionId = \"\";\n      let rightCellSectionId = \"\";\n      let bottomLeftCellSectionId = \"\";\n      let bottomRightCellSectionId = \"\";\n      let leftCellSectionId = \"\";\n\n      if(section == 1) {\n        topLeftCellSectionId = this.getCellSectionId(row - 1, column, 3);\n        topRightCellSectionId = this.getCellSectionId(row - 1, column, 4);\n        rightCellSectionId = this.getCellSectionId(row, column + 1, 1);\n        bottomLeftCellSectionId = this.getCellSectionId(row, column, 3);\n        bottomRightCellSectionId = this.getCellSectionId(row, column, 4);\n        leftCellSectionId = this.getCellSectionId(row, column - 1, 2);\n      } else if(section == 3) {\n        topLeftCellSectionId = this.getCellSectionId(row, column, 1);\n        topRightCellSectionId = this.getCellSectionId(row, column, 2);\n        rightCellSectionId = this.getCellSectionId(row, column + 1, 3);\n        bottomLeftCellSectionId = this.getCellSectionId(row + 1, column, 1);\n        bottomRightCellSectionId = this.getCellSectionId(row + 1, column, 2);\n        leftCellSectionId = this.getCellSectionId(row, column - 1, 4);\n      }\n\n      return {\n        topLeftCellSectionId,\n        topRightCellSectionId,\n        rightCellSectionId,\n        bottomLeftCellSectionId,\n        bottomRightCellSectionId,\n        leftCellSectionId\n      };\n    },\n\n    getCellSectionNearCells(row: number, column: number, section: number): {\n      topCellSectionId: string;\n      topLeftCellSectionId: string;\n      topRightCellSectionId: string;\n      rightCellSectionId: string;\n      leftCellSectionId: string;\n      bottomCellSectionId: string;\n      bottomLeftCellSectionId: string;\n      bottomRightCellSectionId: string;\n    } {\n      let topCellSectionId = \"\";\n      let topLeftCellSectionId = \"\";\n      let topRightCellSectionId = \"\";\n      let rightCellSectionId = \"\";\n      let leftCellSectionId = \"\";\n      let bottomCellSectionId = \"\";\n      let bottomLeftCellSectionId = \"\";\n      let bottomRightCellSectionId = \"\";\n\n      if(section == 1) {\n        topCellSectionId = this.getCellSectionId(row - 1, column, 3);\n        topLeftCellSectionId = this.getCellSectionId(row - 1, column - 1, 4);\n        topRightCellSectionId = this.getCellSectionId(row - 1, column, 4);\n        rightCellSectionId = this.getCellSectionId(row, column, 2);\n        leftCellSectionId = this.getCellSectionId(row, column - 1, 2);\n        bottomCellSectionId = this.getCellSectionId(row, column, 3);\n        bottomLeftCellSectionId = this.getCellSectionId(row, column - 1, 4);\n        bottomRightCellSectionId = this.getCellSectionId(row, column, 4);\n      } else if(section == 2) {\n        topCellSectionId = this.getCellSectionId(row - 1, column, 4);\n        topLeftCellSectionId = this.getCellSectionId(row - 1, column, 3);\n        topRightCellSectionId = this.getCellSectionId(row - 1, column + 1, 3);\n        rightCellSectionId = this.getCellSectionId(row, column + 1, 1);\n        leftCellSectionId = this.getCellSectionId(row, column, 1);\n        bottomCellSectionId = this.getCellSectionId(row, column, 4);\n        bottomLeftCellSectionId = this.getCellSectionId(row, column, 3);\n        bottomRightCellSectionId = this.getCellSectionId(row, column + 1, 3);\n      } else if(section == 3) {\n        topCellSectionId = this.getCellSectionId(row, column, 1);\n        topLeftCellSectionId = this.getCellSectionId(row, column - 1, 2);\n        topRightCellSectionId = this.getCellSectionId(row, column, 2);\n        rightCellSectionId = this.getCellSectionId(row, column, 4);\n        leftCellSectionId = this.getCellSectionId(row, column - 1, 4);\n        bottomCellSectionId = this.getCellSectionId(row + 1, column, 1);\n        bottomLeftCellSectionId = this.getCellSectionId(row + 1, column - 1, 2);\n        bottomRightCellSectionId = this.getCellSectionId(row + 1, column, 2);\n      } else if(section == 4) {\n        topCellSectionId = this.getCellSectionId(row, column, 2);\n        topLeftCellSectionId = this.getCellSectionId(row, column, 1);\n        topRightCellSectionId = this.getCellSectionId(row, column + 1, 1);\n        rightCellSectionId = this.getCellSectionId(row, column + 1, 3);\n        leftCellSectionId = this.getCellSectionId(row, column, 3);\n        bottomCellSectionId = this.getCellSectionId(row + 1, column, 2);\n        bottomLeftCellSectionId = this.getCellSectionId(row + 1, column, 1);\n        bottomRightCellSectionId = this.getCellSectionId(row + 1, column + 1, 1);\n      }\n\n      return {\n        topCellSectionId,\n        topLeftCellSectionId,\n        topRightCellSectionId,\n        rightCellSectionId,\n        leftCellSectionId,\n        bottomCellSectionId,\n        bottomLeftCellSectionId,\n        bottomRightCellSectionId\n      }\n    },\n\n    getLastreSingle() {\n      const data = Object.values(this.selectedCellSections);\n      const singles = data.filter((x) => !x.isSquare && !x.hBlock && !x.vBlock && !x.ignored);\n\n      const blocks25x50singles = singles.filter((x) => x.height == 50);\n      const blocks25x75singles = singles.filter((x) => x.height == 75);\n      const blocks25x100singles = singles.filter((x) => x.height == 100);\n    \n      blocks25x50singles.forEach((x) => {\n        this.computeResult.L25x50 += 4;\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSingleBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.leftCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n      });\n      \n      blocks25x75singles.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x50 += 4;\n          this.computeResult.L25x25 += 4;\n        } else {\n          this.computeResult.L25x75 += 4;\n        }\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSingleBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            if(this.selectedCellSections[nearCells.topCellSectionId].height != 50) {\n              this.computeResult.L25x25--;\n            }\n          } else {\n            this.computeResult.L25x75--;\n            if(this.selectedCellSections[nearCells.topCellSectionId].height == 50) {\n              this.computeResult.L25x25++;\n            }\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            if(this.selectedCellSections[nearCells.rightCellSectionId].height != 50) {\n              this.computeResult.L25x25--;\n            }\n          } else {\n            this.computeResult.L25x75--;\n            if(this.selectedCellSections[nearCells.rightCellSectionId].height == 50) {\n              this.computeResult.L25x25++;\n            }\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            if(this.selectedCellSections[nearCells.bottomCellSectionId].height != 50) {\n              this.computeResult.L25x25--;\n            }\n          } else {\n            this.computeResult.L25x75--;\n            if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 50) {\n              this.computeResult.L25x25++;\n            }\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            if(this.selectedCellSections[nearCells.leftCellSectionId].height != 50) {\n              this.computeResult.L25x25--;\n            }\n          } else {\n            this.computeResult.L25x75--;\n            if(this.selectedCellSections[nearCells.leftCellSectionId].height == 50) {\n              this.computeResult.L25x25++;\n            }\n          }\n        }\n      });\n     \n      blocks25x100singles.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x50 += 8;\n        } else {\n          this.computeResult.L25x100 += 4;\n        }\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSingleBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.topCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.topCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.rightCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.rightCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.leftCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.leftCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n      });\n    },\n\n    getLastreVBlock() {\n      const data = Object.values(this.selectedCellSections);\n      const vBlocks = data.filter((x) => x.vBlock);\n\n      const blocksH50vBlocks = vBlocks.filter((x) => x.height == 50);\n      const blocksH75vBlocks = vBlocks.filter((x) => x.height == 75);\n      const blocksH100vBlocks = vBlocks.filter((x) => x.height == 100);\n\n      blocksH50vBlocks.forEach((x) => {\n        this.computeResult.L25x50 += 2;\n        this.computeResult.L50x50 += 2;\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getVBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n      });\n\n      blocksH75vBlocks.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x25 += 2;\n          this.computeResult.L25x50 += 2;\n          this.computeResult.L50x50 += 2;\n          this.computeResult.L25x50 += 2;\n        } else {\n          this.computeResult.L50x75 += 2;\n          this.computeResult.L25x75 += 2;\n        }\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getVBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        \n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.topCellSectionId].height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n      });\n\n      blocksH100vBlocks.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x50 += 4;\n          this.computeResult.L50x50 += 4;\n        } else {\n          this.computeResult.L50x100 += 2;\n          this.computeResult.L25x100 += 2;\n        }\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getVBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        \n        if(this.selectedCellSections[nearCells.topCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.topCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.topCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.bottomCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n      });\n    },\n\n    getLastreHBlock() {\n      const data = Object.values(this.selectedCellSections);\n      const hBlocks = data.filter((x) => x.hBlock);\n\n      const blocksH50hBlocks = hBlocks.filter((x) => x.height == 50);\n      const blocksH75hBlocks = hBlocks.filter((x) => x.height == 75);\n      const blocksH100hBlocks = hBlocks.filter((x) => x.height == 100);\n\n      blocksH50hBlocks.forEach((x) => {\n        this.computeResult.L25x50 += 2;\n        this.computeResult.L50x50 += 2;\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getHBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.bottomLeftCellSectionId] || this.selectedCellSections[nearCells.bottomRightCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.bottomLeftCellSectionId] && this.selectedCellSections[nearCells.bottomRightCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n      });\n\n      blocksH75hBlocks.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x25 += 2;\n          this.computeResult.L25x50 += 2;\n          this.computeResult.L50x50 += 2;\n          this.computeResult.L25x50 += 2;\n        } else {\n          this.computeResult.L50x75 += 2;\n          this.computeResult.L25x75 += 2;\n        }\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getHBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        \n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.rightCellSectionId].height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.leftCellSectionId].height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] || this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] && this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n      });\n\n      blocksH100hBlocks.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L25x50 += 4;\n          this.computeResult.L50x50 += 4;\n        } else {\n          this.computeResult.L50x100 += 2;\n          this.computeResult.L25x100 += 2;\n        }\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getHBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        \n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.rightCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.rightCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.leftCellSectionId].height == 50) {\n            this.computeResult.L25x50++;\n          } else if(this.selectedCellSections[nearCells.leftCellSectionId].height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] || this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] && this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n      });\n    },\n\n    getLastreSquare() {\n      const data = Object.values(this.selectedCellSections);\n      const squareBlocks = data.filter((x) => x.isSquare);\n\n      const blocksH50squares = squareBlocks.filter((x) => x.height == 50);\n      const blocksH75squares = squareBlocks.filter((x) => x.height == 75);\n      const blocksH100squares = squareBlocks.filter((x) => x.height == 100);\n\n      blocksH50squares.forEach((x) => {\n        this.computeResult.L50x50 += 4;\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSquareBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column);\n\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n        if(this.selectedCellSections[nearCells.bottomLeftCellSectionId] || this.selectedCellSections[nearCells.bottomRightCellSectionId]) {\n          this.computeResult.L50x50--;\n          this.computeResult.L25x50++;\n        }\n        if(this.selectedCellSections[nearCells.bottomLeftCellSectionId] && this.selectedCellSections[nearCells.bottomRightCellSectionId]) {\n          this.computeResult.L25x50--;\n        }\n      });\n\n      blocksH75squares.forEach((x) => {\n        if(!this.singleSlabs) {\n          this.computeResult.L50x50 += 4;\n          this.computeResult.L25x50 += 4;\n        } else {\n          this.computeResult.L50x75 += 4;\n        }\n\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSquareBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column);\n\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] || this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50--;\n            this.computeResult.L25x50--;\n            this.computeResult.L25x50++;\n            this.computeResult.L25x25++;\n          } else {\n            this.computeResult.L50x75--;\n            this.computeResult.L25x75++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] && this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50--;\n            this.computeResult.L25x25--;\n          } else {\n            this.computeResult.L25x75--;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x25 -=2;\n            this.computeResult.L25x50++;\n          }\n        }\n      });\n\n      blocksH100squares.forEach((x) => {\n        if(!this.singleSlabs) {\n        this.computeResult.L50x50 += 8;\n        } else {\n        this.computeResult.L50x100 += 4;\n        }\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCells = this.getSquareBlockNearCells(currentCellCoordinates.row, currentCellCoordinates.column);\n\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] || this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.topRightCellSectionId] && this.selectedCellSections[nearCells.topLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.topRightCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.topLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] || this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.rightTopCellSectionId] && this.selectedCellSections[nearCells.rightBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.rightTopCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.rightBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] || this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.leftTopCellSectionId] && this.selectedCellSections[nearCells.leftBottomCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.leftTopCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.leftBottomCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n\n        \n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] || this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L50x50 -= 2;\n            this.computeResult.L25x50 += 2;\n          } else {\n            this.computeResult.L50x100--;\n            this.computeResult.L25x100++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n          if(this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25++;\n          }\n        }\n        if(this.selectedCellSections[nearCells.bottomRightCellSectionId] && this.selectedCellSections[nearCells.bottomLeftCellSectionId]) {\n          if(!this.singleSlabs) {\n            this.computeResult.L25x50 -= 2;\n          } else {\n            this.computeResult.L25x100--;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 50 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 50) {\n            this.computeResult.L25x50 -= 2;\n            this.computeResult.L50x50++;\n          }\n          if(this.selectedCellSections[nearCells.bottomRightCellSectionId]?.height == 75 && this.selectedCellSections[nearCells.bottomLeftCellSectionId]?.height == 75) {\n            this.computeResult.L25x25 -= 2;\n            this.computeResult.L25x50++;\n          }\n        }\n      });\n    },\n\n    getLastre() {\n      this.getLastreSingle();\n      this.getLastreVBlock();\n      this.getLastreHBlock();\n      this.getLastreSquare();\n    },\n\n    getBasamenti() {\n      const data = Object.values(this.selectedCellSections);\n      this.computeResult.B25x50 = data.filter((x) => x.hBlock).length + data.filter((x) => x.vBlock).length;\n      this.computeResult.B50x50 = data.filter((x) => x.isSquare).length;\n      this.computeResult.B25x25 = data.filter((x) => !x.isSquare && !x.hBlock && !x.vBlock && !x.ignored).length;\n    },\n\n    getOverlappingPoints(row: number, column: number, section: number, position: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"): Point[] {\n      const res: Point[] = [];\n      const nearCells = this.getCellSectionNearCells(row, column, section);\n\n      if(position == \"top-right\") {\n        res.push({\n          cellSectionId: nearCells.topCellSectionId,\n          position: \"bottom-right\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.rightCellSectionId,\n          position: \"top-left\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.topRightCellSectionId,\n          position: \"bottom-left\",\n          type: \"ignore\"\n        });\n      } else if(position == \"top-left\") {\n        res.push({\n          cellSectionId: nearCells.topCellSectionId,\n          position: \"bottom-left\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.topLeftCellSectionId,\n          position: \"bottom-right\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.leftCellSectionId,\n          position: \"top-right\",\n          type: \"ignore\"\n        });\n      } else if(position == \"bottom-left\") {\n        res.push({\n          cellSectionId: nearCells.leftCellSectionId,\n          position: \"bottom-right\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.bottomCellSectionId,\n          position: \"top-right\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.bottomCellSectionId,\n          position: \"top-left\",\n          type: \"ignore\"\n        });\n      } else if(position == \"bottom-right\") {\n        res.push({\n          cellSectionId: nearCells.bottomCellSectionId,\n          position: \"top-right\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.bottomRightCellSectionId,\n          position: \"top-left\",\n          type: \"ignore\"\n        });\n        res.push({\n          cellSectionId: nearCells.rightCellSectionId,\n          position: \"bottom-left\",\n          type: \"ignore\"\n        });\n      }\n      return res;\n    },\n\n    getLinearPoints() {\n      const data = Object.values(this.selectedCellSections);\n      data.forEach((x) => {\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCellCoordinates = this.getCellSectionNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        if(this.selectedCellSections[nearCellCoordinates.topCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.leftCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-left\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.topCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.rightCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-right\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-left\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-left\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-right\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-right\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.leftCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-left\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        if(this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.rightCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-right\",\n              type: \"linear\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n      });\n    },\n\n    getInternalPoints() {\n      const data = Object.values(this.selectedCellSections);\n      data.forEach((x) => {\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCellCoordinates = this.getCellSectionNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(!this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-left\",\n              type: \"internal\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(!this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-right\",\n              type: \"internal\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(!this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-left\",\n              type: \"internal\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(!this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          !this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-right\",\n              type: \"internal\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n      });\n    },\n\n    getExternalPoints() {\n      const data = Object.values(this.selectedCellSections);\n      data.forEach((x) => {\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCellCoordinates = this.getCellSectionNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-left\" && p.cellSectionId == x.cellSectionId)) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-left\",\n              type: \"external\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        \n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.topRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-right\" && p.cellSectionId == x.cellSectionId)) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-right\",\n              type: \"external\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-left\" && p.cellSectionId == x.cellSectionId)) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-left\",\n              type: \"external\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          !this.selectedCellSections[nearCellCoordinates.bottomRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-right\" && p.cellSectionId == x.cellSectionId)) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-right\",\n              type: \"external\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n      });\n    },\n\n    getCentralPoints() {\n      const data = Object.values(this.selectedCellSections);\n      data.forEach((x) => {\n        const currentCellCoordinates = this.parseCellSectionId(x.cellSectionId);\n        const nearCellCoordinates = this.getCellSectionNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          this.selectedCellSections[nearCellCoordinates.topLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-left\",\n              type: \"central\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n        \n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.topCellSectionId] &&\n          this.selectedCellSections[nearCellCoordinates.topRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"top-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"top-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"top-right\",\n              type: \"central\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"top-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(this.selectedCellSections[nearCellCoordinates.leftCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          this.selectedCellSections[nearCellCoordinates.bottomLeftCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-left\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-left\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-left\",\n              type: \"central\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-left\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n\n        if(this.selectedCellSections[nearCellCoordinates.rightCellSectionId] && \n          this.selectedCellSections[nearCellCoordinates.bottomCellSectionId] &&\n          this.selectedCellSections[nearCellCoordinates.bottomRightCellSectionId]\n        ) {\n          if(!this.computeResult.points.find((p) => p.position == \"bottom-right\" && p.cellSectionId == x.cellSectionId) && !x.ignoredPoints.includes(\"bottom-right\")) {\n            this.computeResult.points.push({\n              cellSectionId: x.cellSectionId,\n              position: \"bottom-right\",\n              type: \"central\"\n            });\n            const ignoredPoints = this.getOverlappingPoints(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section, \"bottom-right\");\n            ignoredPoints.forEach((p) => {\n              this.computeResult.points.push(p);\n            });\n          }\n        }\n      });\n    },\n\n    getPoints() {\n      this.getLinearPoints();\n      this.getInternalPoints();\n      this.getExternalPoints();\n      this.getCentralPoints();\n    },\n\n    getAccessori() {\n      this.computeResult.points.forEach((p) => {\n        const cell = this.selectedCellSections[p.cellSectionId];\n        const currentCellCoordinates = this.parseCellSectionId(p.cellSectionId);\n        const nearCellSections = this.getCellSectionNearCells(currentCellCoordinates.row, currentCellCoordinates.column, currentCellCoordinates.section);\n        const topCell = this.selectedCellSections[nearCellSections.topCellSectionId];\n        const leftCell = this.selectedCellSections[nearCellSections.leftCellSectionId];\n        const rightCell = this.selectedCellSections[nearCellSections.rightCellSectionId];\n        const bottomCell = this.selectedCellSections[nearCellSections.bottomCellSectionId];\n        const topLeftCell = this.selectedCellSections[nearCellSections.topLeftCellSectionId];\n        const topRightCell = this.selectedCellSections[nearCellSections.topRightCellSectionId];\n        const bottomRightCell = this.selectedCellSections[nearCellSections.bottomRightCellSectionId];\n        const bottomLeftCell = this.selectedCellSections[nearCellSections.bottomLeftCellSectionId];\n        if(cell) {\n          if(p.type == \"linear\") {\n            const heights: (number | null)[] = [cell.height];\n            if(p.position == \"top-left\") {\n              heights.push(leftCell?.height || null);\n            } else if(p.position == \"top-right\") {\n              heights.push(rightCell?.height || null);\n            } else if(p.position == \"bottom-left\") {\n              heights.push(leftCell?.height || null);\n            } if(p.position == \"bottom-right\") {\n              heights.push(rightCell?.height || null);\n            }\n            if(heights.filter((h) => h == 50).length == 2) {\n              this.computeResult.giuntoAlto += 1;\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 1;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.piastraL += 1;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.piastraL += 1;\n            } else if(heights.filter((h) => h == 75).length == 2) {\n              this.computeResult.giuntoAlto += 1;\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.piastraLineare += 1;\n            } else if(heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 2;\n              this.computeResult.piastraLineare += 1;\n              this.computeResult.allinZ += 1;\n              this.computeResult.allinL += 1;\n            } else if(heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoAlto += 1;\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.piastraLineare += 1;\n            }\n          } else if(p.type == \"internal\") {\n            if(cell.height == 50) {\n              this.computeResult.angolare += 2;\n              this.computeResult.squadrettaAncoraggio += 1;\n            } else if(cell.height == 75) {\n              this.computeResult.angolare += 2;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraAngolare += 1;\n            } else if(cell.height == 100) {\n              this.computeResult.angolare += 2;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraAngolare += 1;\n            }\n          } else if(p.type == \"external\") {\n            const heights: (number | null)[] = [cell.height];\n            if(p.position == \"top-left\") {\n              heights.push(topCell?.height || null);\n              heights.push(leftCell?.height || null);\n            } else if(p.position == \"top-right\") {\n              heights.push(topCell?.height || null);\n              heights.push(rightCell?.height || null);\n            } else if(p.position == \"bottom-left\") {\n              heights.push(bottomCell?.height || null);\n              heights.push(leftCell?.height || null);\n            } if(p.position == \"bottom-right\") {\n              heights.push(bottomCell?.height || null);\n              heights.push(rightCell?.height || null);\n            }\n            if(heights.filter((h) => h == 50).length == 3) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 2;\n              this.computeResult.squadrettaAncoraggio += 1;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 75).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 4;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraL += 1;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 4;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraL += 1;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 2) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 6;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraL += 2;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 6;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraL += 2;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.angolare += 6;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraL += 2;\n            } else if(heights.filter((h) => h == 75).length == 2 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.angolare += 4;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraAngolare += 1;\n              this.computeResult.allinZ += 1;\n              this.computeResult.allinL += 1;\n            } else if(heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.angolare += 6;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraAngolare += 1;\n              this.computeResult.allinZ += 2;\n            } else if(heights.filter((h) => h == 75).length == 3) {\n              this.computeResult.giuntoBasso += 1;\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.angolare += 2;\n              this.computeResult.squadrettaAncoraggio += 1;\n              this.computeResult.piastraAngolare += 1;\n            }\n          } else if(p.type == \"central\") {\n            const heights: (number | null)[] = [cell.height];\n            if(p.position == \"top-left\") {\n              heights.push(topCell?.height || null);\n              heights.push(leftCell?.height || null);\n              heights.push(topLeftCell?.height || null);\n            } else if(p.position == \"top-right\") {\n              heights.push(topCell?.height || null);\n              heights.push(rightCell?.height || null);\n              heights.push(topRightCell?.height || null);\n            } else if(p.position == \"bottom-left\") {\n              heights.push(bottomCell?.height || null);\n              heights.push(leftCell?.height || null);\n              heights.push(bottomLeftCell?.height || null);\n            } if(p.position == \"bottom-right\") {\n              heights.push(bottomCell?.height || null);\n              heights.push(rightCell?.height || null);\n              heights.push(bottomRightCell?.height || null);\n            }\n            if(heights.filter((h) => h == 50).length == 4) {\n              this.computeResult.elementoCrocera += 2;\n            } else if(heights.filter((h) => h == 75).length == 4) {\n              this.computeResult.elementoCrocera += 2;\n            } else if(heights.filter((h) => h == 100).length == 4) {\n              this.computeResult.elementoCrocera += 2;\n            } else if(heights.filter((h) => h == 50).length == 3 && heights.filter((h) => h == 75).length == 1) {\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.elementoCrocera += 2;\n            } else if(heights.filter((h) => h == 50).length == 3 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH100 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.elementoCrocera += 2;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.giuntoAlto += 1;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 1;\n              this.computeResult.tiranteObliquoH100 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.allinL += 1;\n              this.computeResult.allinZ += 1;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 75).length == 2) {\n              this.computeResult.giuntoAlto += 2;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.piantana += 1;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 3) {\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 2 && heights.filter((h) => h == 100).length == 1) {\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 2;\n              this.computeResult.tiranteObliquoH100 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 4;\n              this.computeResult.piastraL += 4;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoAlto += 1;\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 1;\n              this.computeResult.tiranteObliquoH100 += 1;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n              this.computeResult.allinL += 2;\n            } else if(heights.filter((h) => h == 75).length == 2 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoAlto += 2;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 1;\n              this.computeResult.tiranteObliquoH100 += 1;\n              this.computeResult.piantana += 1;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoAlto += 2;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH100 += 1;\n              this.computeResult.piantana += 1;\n            } else if(heights.filter((h) => h == 50).length == 2 && heights.filter((h) => h == 100).length == 2) {\n              this.computeResult.giuntoAlto += 2;\n              this.computeResult.tiranteOrizzontale += 2;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH100 += 1;\n              this.computeResult.piantana += 1;\n            } else if(heights.filter((h) => h == 50).length == 1 && heights.filter((h) => h == 100).length == 3) {\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH100 += 2;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n            } else if(heights.filter((h) => h == 75).length == 1 && heights.filter((h) => h == 100).length == 3) {\n              this.computeResult.tiranteOrizzontale += 4;\n              this.computeResult.tiranteObliquoH50 += 4;\n              this.computeResult.tiranteObliquoH75 += 1;\n              this.computeResult.tiranteObliquoH100 += 3;\n              this.computeResult.piantana += 1;\n              this.computeResult.angolare += 2;\n            }    \n          }\n        }\n      });\n    },\n\n    getResults() {\n      this.computeResult = {\n        B25x25: 0,\n        B25x50: 0,\n        B50x50: 0,\n        L25x25: 0,\n        L25x50: 0,\n        L25x75: 0,\n        L25x100: 0,\n        L50x50: 0,\n        L50x75: 0,\n        L50x100: 0,\n        allinL: 0,\n        allinZ: 0,\n        angolare: 0,\n        elementoCrocera: 0,\n        giuntoAlto: 0,\n        giuntoBasso: 0,\n        piantana: 0,\n        piastraAngolare: 0,\n        piastraL: 0,\n        piastraLineare: 0,\n        spinottoCorto: 0,\n        squadrettaAncoraggio: 0,\n        tiranteObliquo: 0,\n        tiranteObliquoH100: 0,\n        tiranteObliquoH50: 0,\n        tiranteObliquoH75: 0,\n        tiranteOrizzontale: 0,\n        points: []\n      };\n      this.getBasamenti();\n      this.getLastre();\n      this.getPoints();\n      this.getAccessori();\n    },\n    \n    getCellSectionId(row: number, column: number, section: number): string {\n      return `${row}_${column}_${section}`;\n    },\n    parseCellSectionId(id: string): CellSectionCoordinates {\n      const idParts = id.split(\"_\");\n      return {\n        row: Number(idParts[0]),\n        column: Number(idParts[1]),\n        section: Number(idParts[2]),\n      }\n    },\n    cellSectionParsed(key: string): boolean {\n      if(this.selectedCellSections[key]) { \n        if(this.selectedCellSections[key].isSquare || this.selectedCellSections[key].hBlock || this.selectedCellSections[key].vBlock || this.selectedCellSections[key].ignored) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    removeSelectedCellSection(id: string) {\n      if(this.selectedCellSections[id]) {\n        delete this.selectedCellSections[id];\n      }\n    },\n\n    toggleCellSection(id: string) {\n      if(this.selectedCellSections[id]) {\n        this.removeSelectedCellSection(id);\n      } else {\n        this.selectedCellSections[id] = {\n          cellSectionId: id,\n          height: this.blockHeight,\n          ignored: false,\n          isSquare: false,\n          hBlock: false,\n          vBlock: false,\n          ignoredPoints: []\n        };\n      }\n    },\n    toggle(params: ToggleParams) {\n      if(this.blockSize == \"25x25\") {\n        if(this.selectedCellSections[params.cellSectionId]?.isSquare) {\n          let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n          this.removeSelectedCellSection(cellSectionId);\n        } else if(this.selectedCellSections[params.cellSectionId]?.hBlock) {\n          if(params.section === 1) {\n            let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n            this.removeSelectedCellSection(cellSectionId);\n            cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n            this.removeSelectedCellSection(cellSectionId);\n          } else if(params.section === 3) {\n            let cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n            this.removeSelectedCellSection(cellSectionId);\n            cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n            this.removeSelectedCellSection(cellSectionId);\n          }\n        } else if(this.selectedCellSections[params.cellSectionId]?.vBlock) {\n          if(params.section === 1) {\n            let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n            this.removeSelectedCellSection(cellSectionId);\n            cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n            this.removeSelectedCellSection(cellSectionId);\n          } else if(params.section === 2) {\n            let cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n            this.removeSelectedCellSection(cellSectionId);\n            cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n            this.removeSelectedCellSection(cellSectionId);\n          }\n        } else {\n          this.toggleCellSection(params.cellSectionId);\n        }\n      } else if(this.blockSize == \"25x50\") {\n        if(this.selectedCellSections[params.cellSectionId]?.isSquare) {\n          let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n          this.removeSelectedCellSection(cellSectionId);\n        } else {\n          if(params.section === 2) {\n            params.section = 1;\n          }\n          if(params.section === 4) {\n            params.section = 3;\n          }\n          const section1Id = this.getCellSectionId(params.row, params.column, 1); \n          const section2Id = this.getCellSectionId(params.row, params.column, 2); \n          const section3Id = this.getCellSectionId(params.row, params.column, 3); \n          const section4Id = this.getCellSectionId(params.row, params.column, 4); \n          if(params.section === 1) {\n            if(this.selectedCellSections[section1Id]?.vBlock) {\n              this.removeSelectedCellSection(section1Id);\n              this.removeSelectedCellSection(section3Id);\n            } else if(this.selectedCellSections[section1Id] && !this.selectedCellSections[section1Id]?.vBlock) {\n              this.removeSelectedCellSection(section1Id);\n            } else if(this.selectedCellSections[section2Id]?.vBlock) {\n              this.removeSelectedCellSection(section2Id);\n              this.removeSelectedCellSection(section4Id);\n            } else if(this.selectedCellSections[section2Id] && !this.selectedCellSections[section2Id]?.vBlock) {\n              this.removeSelectedCellSection(section2Id);\n            } else {\n              this.toggleCellSection(section1Id);\n              this.toggleCellSection(section2Id);\n            }\n          } else if(params.section === 3) {\n            if(this.selectedCellSections[section1Id]?.vBlock) {\n              this.removeSelectedCellSection(section1Id);\n              this.removeSelectedCellSection(section3Id);\n            } else if(this.selectedCellSections[section3Id] && !this.selectedCellSections[section3Id]?.vBlock) {\n              this.removeSelectedCellSection(section3Id);\n            } else if(this.selectedCellSections[section4Id] && !this.selectedCellSections[section4Id]?.vBlock) {\n              this.removeSelectedCellSection(section4Id);\n            } else if(this.selectedCellSections[section2Id]?.vBlock) {\n              this.removeSelectedCellSection(section2Id);\n              this.removeSelectedCellSection(section4Id);\n            }  else {\n              this.toggleCellSection(section3Id);\n              this.toggleCellSection(section4Id);\n            }\n          }\n        }\n      } else if(this.blockSize == \"50x25\") {\n        if(this.selectedCellSections[params.cellSectionId]?.isSquare) {\n          let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n          this.removeSelectedCellSection(cellSectionId);\n        } else {\n          if(params.section === 3) {\n            params.section = 1;\n          }\n          if(params.section === 4) {\n            params.section = 2;\n          }\n          const section1Id = this.getCellSectionId(params.row, params.column, 1); \n          const section2Id = this.getCellSectionId(params.row, params.column, 2); \n          const section3Id = this.getCellSectionId(params.row, params.column, 3); \n          const section4Id = this.getCellSectionId(params.row, params.column, 4); \n          if(params.section === 1) {\n            if(this.selectedCellSections[section1Id]?.hBlock) {\n              this.removeSelectedCellSection(section1Id);\n              this.removeSelectedCellSection(section2Id);\n            } else if(this.selectedCellSections[section1Id] && !this.selectedCellSections[section1Id]?.hBlock) {\n              this.removeSelectedCellSection(section1Id);\n            } else if(this.selectedCellSections[section3Id] && !this.selectedCellSections[section3Id]?.hBlock) {\n              this.removeSelectedCellSection(section3Id);\n            } else if(this.selectedCellSections[section3Id]?.hBlock) {\n              this.removeSelectedCellSection(section3Id);\n              this.removeSelectedCellSection(section4Id);\n            } else {\n              this.toggleCellSection(section1Id);\n              this.toggleCellSection(section3Id);\n            }\n          } else if(params.section === 2) {\n            if(this.selectedCellSections[section1Id]?.hBlock) {\n              this.removeSelectedCellSection(section1Id);\n              this.removeSelectedCellSection(section3Id);\n            } else if(this.selectedCellSections[section2Id] && !this.selectedCellSections[section2Id]?.hBlock) {\n              this.removeSelectedCellSection(section2Id);\n            } else if(this.selectedCellSections[section4Id] && !this.selectedCellSections[section4Id]?.hBlock) {\n              this.removeSelectedCellSection(section4Id);\n            } else if(this.selectedCellSections[section3Id]?.hBlock) {\n              this.removeSelectedCellSection(section3Id);\n              this.removeSelectedCellSection(section4Id);\n            }  else {\n              this.toggleCellSection(section2Id);\n              this.toggleCellSection(section4Id);\n            }\n          }\n        }\n      } else if(this.blockSize == \"50x50\") {\n        if(!this.selectedCellSections[params.cellSectionId]?.isSquare) {\n          let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n          this.removeSelectedCellSection(cellSectionId);\n          cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n          this.removeSelectedCellSection(cellSectionId);\n        }\n        let cellSectionId = this.getCellSectionId(params.row, params.column, 1);\n        this.toggleCellSection(cellSectionId);\n        cellSectionId = this.getCellSectionId(params.row, params.column, 2);\n        this.toggleCellSection(cellSectionId);\n        cellSectionId = this.getCellSectionId(params.row, params.column, 3);\n        this.toggleCellSection(cellSectionId);\n        cellSectionId = this.getCellSectionId(params.row, params.column, 4);\n        this.toggleCellSection(cellSectionId);\n      }\n      var keys = Object.keys(this.selectedCellSections);\n      keys.sort();\n      for (let key of keys) {\n        if(!this.cellSectionParsed(key)) {\n          this.checkIfSquare(key);\n        }\n        if(!this.cellSectionParsed(key)) {\n          this.checkIfHBlock(key);\n        }\n        if(!this.cellSectionParsed(key)) {\n          this.checkIfVBlock(key);\n        }\n      }\n    }\n  }\n});\n","import { render } from \"./Home.vue?vue&type=template&id=621d7f80&scoped=true&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport \"./Home.vue?vue&type=style&index=0&id=621d7f80&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/rcl-planner/rcl-planner/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-621d7f80\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory, RouteRecordRaw } from \"vue-router\";\nimport Home from \"../views/Home.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n  },\n  // {\n  //   path: \"/about\",\n  //   name: \"About\",\n  //   // route level code-splitting\n  //   // this generates a separate chunk (about.[hash].js) for this route\n  //   // which is lazy-loaded when the route is visited.\n  //   component: () =>\n  //     import(/* webpackChunkName: \"about\" */ \"../views/About.vue\"),\n  // }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","\nimport 'quasar/dist/quasar.css'\nimport langIT from 'quasar/lang/it.js'\nimport '@quasar/extras/roboto-font/roboto-font.css'\nimport '@quasar/extras/material-icons/material-icons.css'\n\n// To be used on app.use(Quasar, { ... })\nexport default {\n  config: {},\n  plugins: {\n  },\n  lang: langIT\n}","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport Quasar from 'quasar/src/vue-plugin.js';\nimport quasarUserOptions from './quasar-user-options'\n\ncreateApp(App).use(Quasar, quasarUserOptions).use(store).use(router).mount(\"#app\");\n"],"sourceRoot":""}